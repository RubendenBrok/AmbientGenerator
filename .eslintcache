[{"/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/index.tsx":"1","/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/reportWebVitals.ts":"2","/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/App.tsx":"3","/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/drift.ts":"4","/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/soundplayer.ts":"5","/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/soundsources.ts":"6","/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/visuals.ts":"7"},{"size":502,"mtime":1612961605000,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1611927196000,"results":"10","hashOfConfig":"9"},{"size":22860,"mtime":1613984654000,"results":"11","hashOfConfig":"9"},{"size":1025,"mtime":1613054079000,"results":"12","hashOfConfig":"9"},{"size":6919,"mtime":1613643630000,"results":"13","hashOfConfig":"9"},{"size":20675,"mtime":1613986292000,"results":"14","hashOfConfig":"9"},{"size":6314,"mtime":1613986703000,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"asqc5z",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":47,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/index.tsx",[],["32","33"],"/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/reportWebVitals.ts",[],"/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/App.tsx",["34","35","36"],"/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/drift.ts",[],"/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/soundplayer.ts",["37","38"],"import { Howl, Howler } from \"howler\"\nimport { soundSources } from \"./soundsources\"\nimport { keys, seqLength, randomArrEntry } from \"./App\"\nimport { SSL_OP_NO_QUERY_MTU } from \"constants\";\n\nclass Sound {\n  howl: any;\n  chords: any;\n\n  constructor(url: string, baseVolume: number, initVolume: number, chords: string[]) {\n    this.howl = new Howl({\n      src: [url],\n      volume: baseVolume * (initVolume / 100)\n    })\n    this.chords = chords;\n  }\n}\n\n/*  for each track, initsoundPlayer loads every sample into a new howl, \n    together with the chords that particular sound can be played on it.\n    All these sounds are then pushed into a sequencer object, which controls the playback\n    \n    soundSources [\n        sounds: [{\n            howl: *ACTUAL SOUND*\n            chords [\"Array of chords it can be played on\"]\n        ]}\n    ]  \n*/\n\nexport function initSoundPlayer(state: any) {\n  Howler.volume(2);\n\n  soundSources.forEach((track: any, index: number) => {\n    let soundsArr: any[] = [];\n    switch (track.kind) {\n      case \"inst\":\n        track.sampleLoader.forEach((sample: any) => {\n          soundsArr.push(\n            new Sound(\n              sample.sampleSource,\n              track.baseVolume,\n              track.initVolume,\n              sample.chords\n            )\n          );\n        });\n        track.sounds = soundsArr;\n        break;\n\n      case \"drum\":\n        track.sampleLoader.forEach((sample: any) => {\n          soundsArr.push(\n            new Sound(\n              sample.sampleSource,\n              track.baseVolume,\n              track.initVolume,\n              sample.chords\n            )\n          );\n        });\n        track.sounds = soundsArr;\n        break;\n\n      case \"fx\":\n        track.sampleLoader.forEach((sample: any) => {\n          soundsArr.push(\n            new Sound(\n              sample.sampleSource,\n              track.baseVolume,\n              track.initVolume,\n              sample.chords\n            )\n          );\n        });\n        track.sounds = soundsArr;\n        break;\n    }    \n  });\n}\n\n\nexport function setTrackVolume(volume: number, index: number) {\n  soundSources[index].sounds.forEach((sound: any) => {\n    sound.howl.volume(\n      (volume / 100) * soundSources[index].baseVolume\n    );\n  });\n}\n\nexport function stopAllSounds(index: number) {\n  soundSources[index].sounds.forEach((sound: any) => {\n    sound.howl.stop();\n  });\n}\n\nfunction getRandomIntButNotThisOne(range: number, current: number) {\n  let out = Math.floor(Math.random() * range);\n  if (out === current) {\n    out = getRandomIntButNotThisOne(range, out);\n  }\n  return out;\n}\n\nfunction getNextSoundIndex(sounds: object[], currentChord: string) {\n  let newSoundIndex: number;\n  let newSoundOptions: number[] = [];\n  sounds.forEach((sound: any, index: number) => {\n    if (sound.chords.includes(currentChord)) {\n      newSoundOptions.push(index);\n    }\n  });\n  newSoundIndex = randomArrEntry(newSoundOptions);\n\n  return newSoundIndex;\n}\n\nexport function playFX(state: any){\n  soundSources.forEach((track: any, index: any) => {\n    if (track.kind === \"fx\"){\n      if (!state[keys.disabledKey + index]){\n      track.sounds[0].howl.play();\n      }\n    }\n  });\n}\n\nexport function randomMutation(\n  iterations: number,\n  startingSeq: number[],\n  sounds: any,\n  tonal: boolean,\n  currentChord: string\n) {\n  let newSeq = [...startingSeq];\n  for (let i = 0; i < iterations; i++) {\n    let emptyIndexes: number[] = [];\n    let filledIndexes: number[] = [];\n    newSeq.forEach((step: number, index: number) => {\n      isNaN(step) ? emptyIndexes.push(index) : filledIndexes.push(index);\n    });\n    if (tonal){\n      newSeq[\n        emptyIndexes[Math.floor(Math.random() * emptyIndexes.length)]\n      ] = getNextSoundIndex(sounds, currentChord)\n    } else {\n      newSeq[\n        emptyIndexes[Math.floor(Math.random() * emptyIndexes.length)]\n      ] = Math.floor(Math.random() * sounds.length);\n    }\n\n    newSeq[\n      filledIndexes[Math.floor(Math.random() * filledIndexes.length)]\n    ] = NaN;\n  }\n  return newSeq;\n}\n\n\nexport function buildFromActivity(\n  currentChord: string,\n  sounds: any[],\n  activity: number,\n  minNotes: number,\n  maxNotes: number,\n) {\n  let noteAmt = calcAmountOfNotes(minNotes, maxNotes, activity);\n  let currentSequence = [];\n  let possibleIndexes = [];\n  for (let i = 0; i < seqLength; i++) {\n    currentSequence.push(NaN);\n    possibleIndexes.push(i);\n  }\n  for (let i = 0; i < noteAmt; i++) {\n    let newSeqIndex = possibleIndexes[Math.floor(Math.random() * seqLength)];\n    let newSoundIndex = getNextSoundIndex(sounds, currentChord);\n    currentSequence[newSeqIndex] = newSoundIndex;\n    possibleIndexes.splice(newSeqIndex, 1);\n  }\n  return currentSequence;\n}\n\nexport function buildFromPattern(patternIndex : number, patterns: any[], sounds: any[]){\n  let newSeq = [...patterns[patternIndex]];\n  newSeq.forEach((step : number, index : number)=>{\n    if (!isNaN(step)){\n      newSeq[index] = Math.floor(Math.random() * sounds.length)\n    }\n  })\n  return newSeq;\n}\n\nfunction calcAmountOfNotes(min: number, max: number, activity: number) {\n  return min + Math.floor((activity / 100) * max);\n}\n\nexport function updateActivity(\n  currentChord: string,\n  sounds: any[],\n  activity: number,\n  minNotes: number,\n  maxNotes: number,\n  currentSequence: number[]\n) {\n  let noteAmt = calcAmountOfNotes(minNotes, maxNotes, activity);\n  let currentSequenceNoteIndices: number[] = [];\n  let currentSequenceEmptyIndices: number[] = [];\n  let editIndex: number;\n  let noteDifference: number;\n\n  currentSequence.forEach((seqItem: number, index: number) => {\n    if (!isNaN(seqItem)) {\n      currentSequenceNoteIndices.push(index);\n    } else {\n      currentSequenceEmptyIndices.push(index);\n    }\n  });\n\n  noteDifference = noteAmt - currentSequenceNoteIndices.length;\n  if (noteDifference < 0) {\n    for (let i = 0; i > noteDifference; i--) {\n      editIndex = Math.floor(Math.random() * currentSequenceNoteIndices.length);\n      currentSequence[currentSequenceNoteIndices[editIndex]] = NaN;\n      currentSequenceNoteIndices.splice(editIndex, 1);\n    }\n  } else if (noteDifference > 0) {\n    for (let i = 0; i < noteDifference; i++) {\n      editIndex = Math.floor(\n        Math.random() * currentSequenceEmptyIndices.length\n      );\n      currentSequence[\n        currentSequenceEmptyIndices[editIndex]\n      ] = getNextSoundIndex(sounds, currentChord);\n      currentSequenceEmptyIndices.splice(editIndex, 1);\n    }\n  }\n\n  return currentSequence;\n}\n\nexport function updateSeqChords(currentChord : string, sounds: any, currentSequence: number[]) {\n    currentSequence.forEach((seqItem: number, seqIndex: number) => {\n      if (!isNaN(seqItem)) {\n        if (!sounds[seqItem].chords.includes(currentChord)) {\n          currentSequence[seqIndex] = getNextSoundIndex(\n            sounds,\n            currentChord\n          );\n        }\n      }\n    });\n\n    return currentSequence;\n}\n\n\n","/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/soundsources.ts",["39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85"],"/Users/Ruben/Desktop/Coding/projects/ambientmusic/src/visuals.ts",["86"],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":393,"column":55,"nodeType":"93","messageId":"94","endLine":393,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":478,"column":55,"nodeType":"93","messageId":"94","endLine":478,"endColumn":57},{"ruleId":"91","severity":1,"message":"92","line":529,"column":55,"nodeType":"93","messageId":"94","endLine":529,"endColumn":57},{"ruleId":"95","severity":1,"message":"96","line":4,"column":10,"nodeType":"97","messageId":"98","endLine":4,"endColumn":29},{"ruleId":"95","severity":1,"message":"99","line":100,"column":11,"nodeType":"97","messageId":"98","endLine":100,"endColumn":36},{"ruleId":"95","severity":1,"message":"100","line":49,"column":8,"nodeType":"97","messageId":"98","endLine":49,"endColumn":17},{"ruleId":"95","severity":1,"message":"101","line":50,"column":8,"nodeType":"97","messageId":"98","endLine":50,"endColumn":17},{"ruleId":"95","severity":1,"message":"102","line":51,"column":8,"nodeType":"97","messageId":"98","endLine":51,"endColumn":17},{"ruleId":"95","severity":1,"message":"103","line":52,"column":8,"nodeType":"97","messageId":"98","endLine":52,"endColumn":17},{"ruleId":"95","severity":1,"message":"104","line":53,"column":8,"nodeType":"97","messageId":"98","endLine":53,"endColumn":17},{"ruleId":"95","severity":1,"message":"105","line":54,"column":8,"nodeType":"97","messageId":"98","endLine":54,"endColumn":17},{"ruleId":"95","severity":1,"message":"106","line":55,"column":8,"nodeType":"97","messageId":"98","endLine":55,"endColumn":17},{"ruleId":"95","severity":1,"message":"107","line":56,"column":8,"nodeType":"97","messageId":"98","endLine":56,"endColumn":17},{"ruleId":"95","severity":1,"message":"108","line":57,"column":8,"nodeType":"97","messageId":"98","endLine":57,"endColumn":17},{"ruleId":"95","severity":1,"message":"109","line":58,"column":8,"nodeType":"97","messageId":"98","endLine":58,"endColumn":18},{"ruleId":"95","severity":1,"message":"110","line":59,"column":8,"nodeType":"97","messageId":"98","endLine":59,"endColumn":18},{"ruleId":"95","severity":1,"message":"111","line":60,"column":8,"nodeType":"97","messageId":"98","endLine":60,"endColumn":18},{"ruleId":"95","severity":1,"message":"112","line":61,"column":8,"nodeType":"97","messageId":"98","endLine":61,"endColumn":18},{"ruleId":"95","severity":1,"message":"113","line":62,"column":8,"nodeType":"97","messageId":"98","endLine":62,"endColumn":18},{"ruleId":"95","severity":1,"message":"114","line":93,"column":8,"nodeType":"97","messageId":"98","endLine":93,"endColumn":16},{"ruleId":"95","severity":1,"message":"115","line":94,"column":8,"nodeType":"97","messageId":"98","endLine":94,"endColumn":16},{"ruleId":"95","severity":1,"message":"116","line":95,"column":8,"nodeType":"97","messageId":"98","endLine":95,"endColumn":16},{"ruleId":"95","severity":1,"message":"117","line":96,"column":8,"nodeType":"97","messageId":"98","endLine":96,"endColumn":16},{"ruleId":"95","severity":1,"message":"118","line":97,"column":8,"nodeType":"97","messageId":"98","endLine":97,"endColumn":16},{"ruleId":"95","severity":1,"message":"119","line":98,"column":8,"nodeType":"97","messageId":"98","endLine":98,"endColumn":16},{"ruleId":"95","severity":1,"message":"120","line":99,"column":8,"nodeType":"97","messageId":"98","endLine":99,"endColumn":16},{"ruleId":"95","severity":1,"message":"121","line":100,"column":8,"nodeType":"97","messageId":"98","endLine":100,"endColumn":16},{"ruleId":"95","severity":1,"message":"122","line":101,"column":8,"nodeType":"97","messageId":"98","endLine":101,"endColumn":16},{"ruleId":"95","severity":1,"message":"123","line":102,"column":8,"nodeType":"97","messageId":"98","endLine":102,"endColumn":17},{"ruleId":"95","severity":1,"message":"124","line":103,"column":8,"nodeType":"97","messageId":"98","endLine":103,"endColumn":17},{"ruleId":"95","severity":1,"message":"125","line":104,"column":8,"nodeType":"97","messageId":"98","endLine":104,"endColumn":17},{"ruleId":"95","severity":1,"message":"126","line":105,"column":8,"nodeType":"97","messageId":"98","endLine":105,"endColumn":17},{"ruleId":"95","severity":1,"message":"127","line":106,"column":8,"nodeType":"97","messageId":"98","endLine":106,"endColumn":17},{"ruleId":"95","severity":1,"message":"128","line":107,"column":8,"nodeType":"97","messageId":"98","endLine":107,"endColumn":17},{"ruleId":"95","severity":1,"message":"129","line":109,"column":8,"nodeType":"97","messageId":"98","endLine":109,"endColumn":16},{"ruleId":"95","severity":1,"message":"130","line":110,"column":8,"nodeType":"97","messageId":"98","endLine":110,"endColumn":16},{"ruleId":"95","severity":1,"message":"131","line":111,"column":8,"nodeType":"97","messageId":"98","endLine":111,"endColumn":16},{"ruleId":"95","severity":1,"message":"132","line":112,"column":8,"nodeType":"97","messageId":"98","endLine":112,"endColumn":16},{"ruleId":"95","severity":1,"message":"133","line":113,"column":8,"nodeType":"97","messageId":"98","endLine":113,"endColumn":16},{"ruleId":"95","severity":1,"message":"134","line":114,"column":8,"nodeType":"97","messageId":"98","endLine":114,"endColumn":16},{"ruleId":"95","severity":1,"message":"135","line":115,"column":8,"nodeType":"97","messageId":"98","endLine":115,"endColumn":16},{"ruleId":"95","severity":1,"message":"136","line":116,"column":8,"nodeType":"97","messageId":"98","endLine":116,"endColumn":16},{"ruleId":"95","severity":1,"message":"137","line":117,"column":8,"nodeType":"97","messageId":"98","endLine":117,"endColumn":16},{"ruleId":"95","severity":1,"message":"138","line":118,"column":8,"nodeType":"97","messageId":"98","endLine":118,"endColumn":17},{"ruleId":"95","severity":1,"message":"139","line":119,"column":8,"nodeType":"97","messageId":"98","endLine":119,"endColumn":17},{"ruleId":"95","severity":1,"message":"140","line":120,"column":8,"nodeType":"97","messageId":"98","endLine":120,"endColumn":17},{"ruleId":"95","severity":1,"message":"141","line":121,"column":8,"nodeType":"97","messageId":"98","endLine":121,"endColumn":17},{"ruleId":"95","severity":1,"message":"142","line":122,"column":8,"nodeType":"97","messageId":"98","endLine":122,"endColumn":17},{"ruleId":"95","severity":1,"message":"143","line":123,"column":8,"nodeType":"97","messageId":"98","endLine":123,"endColumn":17},{"ruleId":"95","severity":1,"message":"144","line":124,"column":8,"nodeType":"97","messageId":"98","endLine":124,"endColumn":17},{"ruleId":"95","severity":1,"message":"145","line":125,"column":8,"nodeType":"97","messageId":"98","endLine":125,"endColumn":17},{"ruleId":"95","severity":1,"message":"146","line":174,"column":8,"nodeType":"97","messageId":"98","endLine":174,"endColumn":14},{"ruleId":"95","severity":1,"message":"147","line":16,"column":5,"nodeType":"97","messageId":"98","endLine":16,"endColumn":15},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-unused-vars","'SSL_OP_NO_QUERY_MTU' is defined but never used.","Identifier","unusedVar","'getRandomIntButNotThisOne' is defined but never used.","'synthbas1' is defined but never used.","'synthbas2' is defined but never used.","'synthbas3' is defined but never used.","'synthbas4' is defined but never used.","'synthbas5' is defined but never used.","'synthbas6' is defined but never used.","'synthbas7' is defined but never used.","'synthbas8' is defined but never used.","'synthbas9' is defined but never used.","'synthbas10' is defined but never used.","'synthbas11' is defined but never used.","'synthbas12' is defined but never used.","'synthbas13' is defined but never used.","'synthbas14' is defined but never used.","'kalimba1' is defined but never used.","'kalimba2' is defined but never used.","'kalimba3' is defined but never used.","'kalimba4' is defined but never used.","'kalimba5' is defined but never used.","'kalimba6' is defined but never used.","'kalimba7' is defined but never used.","'kalimba8' is defined but never used.","'kalimba9' is defined but never used.","'kalimba10' is defined but never used.","'kalimba11' is defined but never used.","'kalimba12' is defined but never used.","'kalimba13' is defined but never used.","'kalimba14' is defined but never used.","'kalimba15' is defined but never used.","'strings1' is defined but never used.","'strings2' is defined but never used.","'strings3' is defined but never used.","'strings4' is defined but never used.","'strings5' is defined but never used.","'strings6' is defined but never used.","'strings7' is defined but never used.","'strings8' is defined but never used.","'strings9' is defined but never used.","'strings10' is defined but never used.","'strings11' is defined but never used.","'strings12' is defined but never used.","'strings13' is defined but never used.","'strings14' is defined but never used.","'strings15' is defined but never used.","'strings16' is defined but never used.","'strings17' is defined but never used.","'snare3' is defined but never used.","'nextCircle' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]